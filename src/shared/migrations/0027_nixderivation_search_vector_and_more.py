# Generated by Django 4.2.7 on 2024-07-30 20:10

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.contrib.postgres.search import SearchVector
from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations

from shared.models import NixDerivation, NixDerivationMeta

def update_search_vectors(apps, schema_editor):
    NixDerivation.objects.update(search_vector=SearchVector("attribute", "name"))
    NixDerivationMeta.objects.update(search_vector=SearchVector("description"))

class Migration(migrations.Migration):

    dependencies = [
        ('shared', '0026_nixderivation_shared_nixd_name_fd9eb7_btree'),
    ]

    operations = [
        migrations.AddField(
            model_name='nixderivation',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='nixderivationmeta',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name='nixderivation',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_nixd_search__8fd81f_gin'),
        ),
        migrations.AddIndex(
            model_name='nixderivationmeta',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_nixd_search__c5ba7b_gin'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixderivation',
            trigger=pgtrigger.compiler.Trigger(name='attribute_name_search_vector_idx', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "attribute", "name")', func='', hash='8c736552457c8a45f333f2b43d93439bdadbd3cb', operation='INSERT OR UPDATE OF "attribute", "name"', pgid='pgtrigger_attribute_name_search_vector_idx_7899f', table='shared_nixderivation', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='nixderivationmeta',
            trigger=pgtrigger.compiler.Trigger(name='description_search_vector_idx', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "description")', func='', hash='77a594a3693398d75d7297433c6c16d88fbc3267', operation='INSERT OR UPDATE OF "description"', pgid='pgtrigger_description_search_vector_idx_617b6', table='shared_nixderivationmeta', when='BEFORE')),
        ),
        # Make sure that the VectorFields are populated when there's data before this migration runs
        migrations.RunPython(
            update_search_vectors, reverse_code=migrations.RunPython.noop
        )
    ]
