# Generated by Django 4.2.16 on 2024-11-16 01:44

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0006_delete_aggregateevent'),
        ('shared', '0040_alter_container_cve_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CVEDerivationClusterProposalStatusEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('rejected', 'rejected'), ('accepted', 'accepted')], default='pending', max_length=8)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerivationClusterProposalLinkEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.BigIntegerField()),
                ('provenance_flags', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cvederivationclusterproposal',
            trigger=pgtrigger.compiler.Trigger(name='insert_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_cvederivationclusterproposalstatusevent" ("pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "status") VALUES (_pgh_attach_context(), NOW(), \'insert\', NEW."id", NEW."status"); RETURN NULL;', hash='efc770984d17fc64253c9ad687e6ce1b0b4cb057', operation='INSERT', pgid='pgtrigger_insert_insert_d1e55', table='shared_cvederivationclusterproposal', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cvederivationclusterproposal',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."status" IS DISTINCT FROM (NEW."status"))', func='INSERT INTO "shared_cvederivationclusterproposalstatusevent" ("pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "status") VALUES (_pgh_attach_context(), NOW(), \'update\', NEW."id", NEW."status"); RETURN NULL;', hash='7422450f03396f4beb556d4e1fcd676a15088d82', operation='UPDATE', pgid='pgtrigger_update_update_b6b2c', table='shared_cvederivationclusterproposal', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='derivationclusterproposallink',
            trigger=pgtrigger.compiler.Trigger(name='derivations_add_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_derivationclusterproposallinkevent" ("derivation_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "proposal_id", "provenance_flags") VALUES (NEW."derivation_id", NEW."id", _pgh_attach_context(), NOW(), \'derivations.add\', NEW."id", NEW."proposal_id", NEW."provenance_flags"); RETURN NULL;', hash='ad19209849503ffb51edf8c5dc123791841ddecf', operation='INSERT', pgid='pgtrigger_derivations_add_insert_f1ba4', table='shared_derivationclusterproposallink', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='derivationclusterproposallink',
            trigger=pgtrigger.compiler.Trigger(name='derivations_remove_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "shared_derivationclusterproposallinkevent" ("derivation_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "proposal_id", "provenance_flags") VALUES (OLD."derivation_id", OLD."id", _pgh_attach_context(), NOW(), \'derivations.remove\', OLD."id", OLD."proposal_id", OLD."provenance_flags"); RETURN NULL;', hash='4187059335048883a5c31e4fbe279f2e173dc626', operation='DELETE', pgid='pgtrigger_derivations_remove_delete_d24e3', table='shared_derivationclusterproposallink', when='AFTER')),
        ),
        migrations.AddField(
            model_name='derivationclusterproposallinkevent',
            name='derivation',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.nixderivation'),
        ),
        migrations.AddField(
            model_name='derivationclusterproposallinkevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='derivationclusterproposallinkevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='events', to='shared.derivationclusterproposallink'),
        ),
        migrations.AddField(
            model_name='derivationclusterproposallinkevent',
            name='proposal',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='shared.cvederivationclusterproposal'),
        ),
        migrations.AddField(
            model_name='cvederivationclusterproposalstatusevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='cvederivationclusterproposalstatusevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='status_events', to='shared.cvederivationclusterproposal'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='derivationclusterproposallinkevent',
            trigger=pgtrigger.compiler.Trigger(name='append_only', sql=pgtrigger.compiler.UpsertTriggerSql(func="RAISE EXCEPTION 'pgtrigger: Cannot update or delete rows from % table', TG_TABLE_NAME;", hash='32d4c9d266e4ea5973920b8f09e508a8df54f03c', operation='UPDATE OR DELETE', pgid='pgtrigger_append_only_5dead', table='shared_derivationclusterproposallinkevent', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cvederivationclusterproposalstatusevent',
            trigger=pgtrigger.compiler.Trigger(name='append_only', sql=pgtrigger.compiler.UpsertTriggerSql(func="RAISE EXCEPTION 'pgtrigger: Cannot update or delete rows from % table', TG_TABLE_NAME;", hash='5d099ffb7d3221480832c45ba7f524db0447a444', operation='UPDATE OR DELETE', pgid='pgtrigger_append_only_e8853', table='shared_cvederivationclusterproposalstatusevent', when='BEFORE')),
        ),
    ]
