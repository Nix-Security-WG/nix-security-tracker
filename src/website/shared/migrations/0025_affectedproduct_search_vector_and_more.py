# Generated by Django 4.2.7 on 2024-06-23 20:18

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.contrib.postgres.search import SearchVector
from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations

from shared.models import AffectedProduct, Container, Cpe, Description


def update_search_vectors(apps, schema_editor):
    Container.objects.update(search_vector=SearchVector("title"))
    Description.objects.update(search_vector=SearchVector("value"))
    AffectedProduct.objects.update(search_vector=SearchVector("vendor", "product", "package_name", "repo"))
    Cpe.objects.update(search_vector=SearchVector("name"))

class Migration(migrations.Migration):

    dependencies = [
        ('shared', '0024_alter_nixlicense_unique_together_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='affectedproduct',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='container',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='cpe',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='description',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name='affectedproduct',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_affe_search__aa6eef_gin'),
        ),
        migrations.AddIndex(
            model_name='container',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_cont_search__979c85_gin'),
        ),
        migrations.AddIndex(
            model_name='cpe',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_cpe_search__347dd9_gin'),
        ),
        migrations.AddIndex(
            model_name='description',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='shared_desc_search__dd1c6d_gin'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='affectedproduct',
            trigger=pgtrigger.compiler.Trigger(name='affected_search_vector', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "vendor", "product", "package_name", "repo")', func='', hash='27c6a9539dba25b1c7641933f15dc17346a04b87', operation='INSERT OR UPDATE OF "vendor", "product", "package_name", "repo"', pgid='pgtrigger_affected_search_vector_25927', table='shared_affectedproduct', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='container',
            trigger=pgtrigger.compiler.Trigger(name='cve_container_search_vector', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "title")', func='', hash='26d3e8e55e86b059c13aa7375180c06c7c3cfc5e', operation='INSERT OR UPDATE OF "title"', pgid='pgtrigger_cve_container_search_vector_85378', table='shared_container', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cpe',
            trigger=pgtrigger.compiler.Trigger(name='cpe_search_vector_idx', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "name")', func='', hash='5831e70cff7886047233ef2d3b870a320fa5d81d', operation='INSERT OR UPDATE OF "name"', pgid='pgtrigger_cpe_search_vector_idx_80861', table='shared_cpe', when='BEFORE')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='description',
            trigger=pgtrigger.compiler.Trigger(name='description_search_vector_idx', sql=pgtrigger.compiler.UpsertTriggerSql(execute='tsvector_update_trigger("search_vector", "pg_catalog.english", "value")', func='', hash='5b6196ba33f28ffdb9dcfff123f0ea2fe94588fd', operation='INSERT OR UPDATE OF "value"', pgid='pgtrigger_description_search_vector_idx_ce47a', table='shared_description', when='BEFORE')),
        ),
        # Make sure that the VectorFields are populated when there's data before this migration runs
        migrations.RunPython(
            update_search_vectors, reverse_code=migrations.RunPython.noop
        )
    ]
