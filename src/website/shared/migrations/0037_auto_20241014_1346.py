# Generated by Django 4.2.16 on 2024-10-14 13:46

from shared.models.linkage import ProvenanceFlags
from django.db import migrations

def create_through_relations(apps, schema_editor):
    CVEDerivationClusterProposal = apps.get_model('shared', 'CVEDerivationClusterProposal')
    DerivationClusterProposalLink = apps.get_model('shared', 'DerivationClusterProposalLink')

    for proposal in CVEDerivationClusterProposal.objects.all():
        links = []
        for derivation in proposal.derivations.all():
            links.append(DerivationClusterProposalLink(
                proposal=proposal,
                derivation=derivation,
                # Historically, this was only the way to match things up.
                provenance_flags=ProvenanceFlags.PACKAGE_NAME_MATCH
            ))

        DerivationClusterProposalLink.objects.bulk_create(links)

def delete_through_relations(apps, schema_editor):
    DerivationClusterProposalLink = apps.get_model('shared', 'DerivationClusterProposalLink')
    DerivationClusterProposalLink.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('shared', '0036_derivationclusterproposallink'),
    ]

    operations = [
        migrations.RunPython(create_through_relations, delete_through_relations)
    ]
